; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=526 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\main.crf ..\..\User\app\src\main.c]
                          THUMB

                          AREA ||i.AM21E_init||, CODE, READONLY, ALIGN=2

                  AM21E_init PROC
;;;120    */
;;;121    void AM21E_init(void)
000000  b570              PUSH     {r4-r6,lr}
;;;122    {
;;;123    	uint8_t i;
;;;124    	
;;;125    	/* 在此处添加控制开机引脚 */
;;;126    	
;;;127    	
;;;128    	/* AT 发送 等待 OK 响应 */
;;;129    	if(GPRS_PowerOn())
000002  f7fffffe          BL       GPRS_PowerOn
000006  2800              CMP      r0,#0
000008  d020              BEQ      |L1.76|
;;;130    	{		
;;;131    		#if ENABLEGPS		
;;;132    		
;;;133    				if(AT_SendToCmdData("AT+AMGNSSC=1","OK",2000))					
00000a  f44f62fa          MOV      r2,#0x7d0
00000e  a114              ADR      r1,|L1.96|
000010  a014              ADR      r0,|L1.100|
000012  f7fffffe          BL       AT_SendToCmdData
000016  b1c8              CBZ      r0,|L1.76|
;;;134    				{	
;;;135    							AT_SendToCmdData("AT+AMGNSSEPO=1","Download EPO ok",5000);		//GPS芯片第一次用EOP需要返回Download EPO ok and save success! 则为成功，再次上电就会返回 OK
000018  f2413588          MOV      r5,#0x1388
00001c  462a              MOV      r2,r5
00001e  a115              ADR      r1,|L1.116|
000020  a018              ADR      r0,|L1.132|
000022  f7fffffe          BL       AT_SendToCmdData
;;;136    							for(i=0; i<10; i++)
000026  2400              MOVS     r4,#0
                  |L1.40|
;;;137    							{
;;;138    									if(AT_SendToCmdData("AT+AMGEPOAID","OK",5000))
000028  462a              MOV      r2,r5
00002a  a10d              ADR      r1,|L1.96|
00002c  a019              ADR      r0,|L1.148|
00002e  f7fffffe          BL       AT_SendToCmdData
000032  2800              CMP      r0,#0
000034  d113              BNE      |L1.94|
;;;139    									{
;;;140    										return;
;;;141    									}else if (AT_SendToCmdData("AT+AMGEPOAID","+CME ERROR",5000))
000036  462a              MOV      r2,r5
000038  a11a              ADR      r1,|L1.164|
00003a  a016              ADR      r0,|L1.148|
00003c  f7fffffe          BL       AT_SendToCmdData
000040  2800              CMP      r0,#0
000042  d10c              BNE      |L1.94|
000044  1c64              ADDS     r4,r4,#1
000046  b2e4              UXTB     r4,r4                 ;136
000048  2c0a              CMP      r4,#0xa               ;136
00004a  d3ed              BCC      |L1.40|
                  |L1.76|
;;;142    									{
;;;143    										return;			//失败了也推出函数
;;;144    									}
;;;145    							}						
;;;146    				}
;;;147    		goto exit;	
;;;148    		#else
;;;149    		return;
;;;150    		#endif
;;;151    	}else{
;;;152    		goto exit;	
;;;153    	}
;;;154    	/* 响应失败后加入失败代码 */
;;;155    exit:	
;;;156    	while(1)
;;;157    	{
;;;158    	    printf(" AM21E Response failure   \n ");
00004c  a018              ADR      r0,|L1.176|
00004e  f7fffffe          BL       __2printf
;;;159    			printf(" AM21E system Reswet ...   \r\n ");
000052  a01f              ADR      r0,|L1.208|
000054  f7fffffe          BL       __2printf
;;;160    			SystemReset();
000058  f7fffffe          BL       SystemReset
00005c  e7f6              B        |L1.76|
                  |L1.94|
;;;161    		
;;;162    	}
;;;163    }
00005e  bd70              POP      {r4-r6,pc}
;;;164    
                          ENDP

                  |L1.96|
000060  4f4b00            DCB      "OK",0
000063  00                DCB      0
                  |L1.100|
000064  41542b41          DCB      "AT+AMGNSSC=1",0
000068  4d474e53
00006c  53433d31
000070  00      
000071  00                DCB      0
000072  00                DCB      0
000073  00                DCB      0
                  |L1.116|
000074  446f776e          DCB      "Download EPO ok",0
000078  6c6f6164
00007c  2045504f
000080  206f6b00
                  |L1.132|
000084  41542b41          DCB      "AT+AMGNSSEPO=1",0
000088  4d474e53
00008c  5345504f
000090  3d3100  
000093  00                DCB      0
                  |L1.148|
000094  41542b41          DCB      "AT+AMGEPOAID",0
000098  4d474550
00009c  4f414944
0000a0  00      
0000a1  00                DCB      0
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L1.164|
0000a4  2b434d45          DCB      "+CME ERROR",0
0000a8  20455252
0000ac  4f5200  
0000af  00                DCB      0
                  |L1.176|
0000b0  20414d32          DCB      " AM21E Response failure   \n ",0
0000b4  31452052
0000b8  6573706f
0000bc  6e736520
0000c0  6661696c
0000c4  75726520
0000c8  20200a20
0000cc  00      
0000cd  00                DCB      0
0000ce  00                DCB      0
0000cf  00                DCB      0
                  |L1.208|
0000d0  20414d32          DCB      " AM21E system Reswet ...   \r\n ",0
0000d4  31452073
0000d8  79737465
0000dc  6d205265
0000e0  73776574
0000e4  202e2e2e
0000e8  2020200d
0000ec  0a2000  
0000ef  00                DCB      0

                          AREA ||i.AT_GetToGPSData||, CODE, READONLY, ALIGN=1

                  AT_GetToGPSData PROC
;;;175    */
;;;176    void AT_GetToGPSData(char *_pATstr)
000000  b510              PUSH     {r4,lr}
;;;177    {
;;;178    	GPRS_SendAT(_pATstr);						 //发送 AT 指令
000002  f7fffffe          BL       GPRS_SendAT
;;;179    	bsp_StartTimer(GPRS_TMR_ID,10000); //固定时间10000ms，给足模组反馈信息的时间
000006  f2427110          MOV      r1,#0x2710
00000a  2003              MOVS     r0,#3
00000c  f7fffffe          BL       bsp_StartTimer
                  |L2.16|
;;;180    	while(1)
;;;181    	{	
;;;182    		if (bsp_CheckTimer(GPRS_TMR_ID))
000010  2003              MOVS     r0,#3
000012  f7fffffe          BL       bsp_CheckTimer
000016  2800              CMP      r0,#0
000018  d0fa              BEQ      |L2.16|
;;;183    		{
;;;184    			gps_pro();
00001a  e8bd4010          POP      {r4,lr}
00001e  f7ffbffe          B.W      gps_pro
;;;185    			return;
;;;186    		}
;;;187    	}
;;;188    }
;;;189    
                          ENDP


                          AREA ||i.DispGPSStatus||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_sizespec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  DispGPSStatus PROC
;;;197    */
;;;198    static void DispGPSStatus(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;199    {
;;;200    	char buf[128];
;;;201    	
;;;202    	char _ddmmDuf[128];
;;;203    	char _ddDuf[128];
;;;204    	
;;;205    	double   	MM = 0.0;	
;;;206    	double   	DD = 0.0;		
;;;207    		
;;;208    	/* 纬度换算 */
;;;209    	sprintf(_ddmmDuf, "%02d.%05d",g_tGPS.WeiDu_Fen/100000,g_tGPS.WeiDu_Fen%100000);
000004  4c4f              LDR      r4,|L3.324|
000006  4e50              LDR      r6,|L3.328|
000008  b0e0              SUB      sp,sp,#0x180          ;199
00000a  6d20              LDR      r0,[r4,#0x50]  ; g_tGPS
00000c  fbb0f1f6          UDIV     r1,r0,r6
000010  fbb0f2f6          UDIV     r2,r0,r6
000014  fb060311          MLS      r3,r6,r1,r0
000018  a14c              ADR      r1,|L3.332|
00001a  a820              ADD      r0,sp,#0x80
00001c  f7fffffe          BL       __2sprintf
;;;210    	MM = atof(_ddmmDuf);										//得到分的浮点数
000020  a820              ADD      r0,sp,#0x80
000022  f7fffffe          BL       atof
;;;211    	MM = MM / 60.0;
000026  f8df8130          LDR      r8,|L3.344|
00002a  2200              MOVS     r2,#0
00002c  4643              MOV      r3,r8
00002e  f7fffffe          BL       __aeabi_ddiv
000032  4607              MOV      r7,r0
000034  460d              MOV      r5,r1
;;;212    	DD = MM + (double)g_tGPS.WeiDu_Du;
000036  f8b4004e          LDRH     r0,[r4,#0x4e]  ; g_tGPS
00003a  f7fffffe          BL       __aeabi_ui2d
00003e  463a              MOV      r2,r7
000040  462b              MOV      r3,r5
000042  f7fffffe          BL       __aeabi_dadd
;;;213    	sprintf(_ddDuf,"%lf",DD);							 //换算后的纬度，单位 °
000046  4602              MOV      r2,r0
000048  460b              MOV      r3,r1
00004a  a144              ADR      r1,|L3.348|
00004c  4668              MOV      r0,sp
00004e  f7fffffe          BL       __2sprintf
;;;214    	/* 将临时缓存值写入要发送的数组 */
;;;215    	
;;;216    	memcpy(t_ATReadCMD.LAT,_ddDuf,strlen(_ddDuf));
000052  4668              MOV      r0,sp
000054  f7fffffe          BL       strlen
000058  4d41              LDR      r5,|L3.352|
00005a  4602              MOV      r2,r0
00005c  4669              MOV      r1,sp
00005e  68e8              LDR      r0,[r5,#0xc]  ; t_ATReadCMD
000060  f7fffffe          BL       __aeabi_memcpy
;;;217    	
;;;218    	/* 清楚临时缓存 */
;;;219    	memset(_ddmmDuf,0,strlen(_ddmmDuf));
000064  a820              ADD      r0,sp,#0x80
000066  f7fffffe          BL       strlen
00006a  4601              MOV      r1,r0
00006c  a820              ADD      r0,sp,#0x80
00006e  f7fffffe          BL       __aeabi_memclr4
;;;220    	memset(_ddDuf,0,strlen(_ddDuf));
000072  4668              MOV      r0,sp
000074  f7fffffe          BL       strlen
000078  4601              MOV      r1,r0
00007a  4668              MOV      r0,sp
00007c  f7fffffe          BL       __aeabi_memclr4
;;;221    	/* 精度换算 */
;;;222    	sprintf(_ddmmDuf, "%02d.%05d",g_tGPS.JingDu_Fen/100000,g_tGPS.JingDu_Fen%100000);
000080  6da0              LDR      r0,[r4,#0x58]  ; g_tGPS
000082  fbb0f1f6          UDIV     r1,r0,r6
000086  fbb0f2f6          UDIV     r2,r0,r6
00008a  fb060311          MLS      r3,r6,r1,r0
00008e  a12f              ADR      r1,|L3.332|
000090  a820              ADD      r0,sp,#0x80
000092  f7fffffe          BL       __2sprintf
;;;223    	MM = atof(_ddmmDuf);									//得到分的浮点数
000096  a820              ADD      r0,sp,#0x80
000098  f7fffffe          BL       atof
;;;224    	MM = MM / 60.0;
00009c  2200              MOVS     r2,#0
00009e  4643              MOV      r3,r8
0000a0  f7fffffe          BL       __aeabi_ddiv
0000a4  4607              MOV      r7,r0
0000a6  460e              MOV      r6,r1
;;;225    	DD = MM + (double)g_tGPS.JingDu_Du;
0000a8  f8b40056          LDRH     r0,[r4,#0x56]  ; g_tGPS
0000ac  f7fffffe          BL       __aeabi_ui2d
0000b0  463a              MOV      r2,r7
0000b2  4633              MOV      r3,r6
0000b4  f7fffffe          BL       __aeabi_dadd
;;;226    	sprintf(_ddDuf,"%lf",DD);							//换算后的经度，单位 °
0000b8  4602              MOV      r2,r0
0000ba  460b              MOV      r3,r1
0000bc  a127              ADR      r1,|L3.348|
0000be  4668              MOV      r0,sp
0000c0  f7fffffe          BL       __2sprintf
;;;227    	/* 将临时缓存值写入要发送的数组 */
;;;228    	
;;;229    	memcpy(t_ATReadCMD.LON,_ddDuf,strlen(_ddDuf));
0000c4  4668              MOV      r0,sp
0000c6  f7fffffe          BL       strlen
0000ca  4602              MOV      r2,r0
0000cc  4669              MOV      r1,sp
0000ce  6928              LDR      r0,[r5,#0x10]  ; t_ATReadCMD
0000d0  f7fffffe          BL       __aeabi_memcpy
;;;230    	
;;;231    	/* 清楚临时缓存 */
;;;232    	memset(_ddmmDuf,0,strlen(_ddmmDuf));
0000d4  a820              ADD      r0,sp,#0x80
0000d6  f7fffffe          BL       strlen
0000da  4601              MOV      r1,r0
0000dc  a820              ADD      r0,sp,#0x80
0000de  f7fffffe          BL       __aeabi_memclr4
;;;233    	memset(_ddDuf,0,strlen(_ddDuf));
0000e2  4668              MOV      r0,sp
0000e4  f7fffffe          BL       strlen
0000e8  4601              MOV      r1,r0
0000ea  4668              MOV      r0,sp
0000ec  f7fffffe          BL       __aeabi_memclr4
;;;234    
;;;235    	/* 速度 */
;;;236    	sprintf(buf,"%5d.%d", g_tGPS.SpeedKM / 10, g_tGPS.SpeedKM % 10);
0000f0  6f60              LDR      r0,[r4,#0x74]  ; g_tGPS
0000f2  260a              MOVS     r6,#0xa
0000f4  fbb0f1f6          UDIV     r1,r0,r6
0000f8  fbb0f2f6          UDIV     r2,r0,r6
0000fc  fb060311          MLS      r3,r6,r1,r0
000100  a118              ADR      r1,|L3.356|
000102  a840              ADD      r0,sp,#0x100
000104  f7fffffe          BL       __2sprintf
;;;237    
;;;238    	memcpy(t_ATReadCMD.Speed,buf,strlen(buf));
000108  a840              ADD      r0,sp,#0x100
00010a  f7fffffe          BL       strlen
00010e  4602              MOV      r2,r0
000110  a940              ADD      r1,sp,#0x100
000112  6968              LDR      r0,[r5,#0x14]  ; t_ATReadCMD
000114  f7fffffe          BL       __aeabi_memcpy
;;;239    
;;;240    	/* 海拔 */
;;;241    	sprintf(buf, "%5d.%d", g_tGPS.Altitude / 10, g_tGPS.Altitude % 10);
000118  6860              LDR      r0,[r4,#4]  ; g_tGPS
00011a  fbb0f1f6          UDIV     r1,r0,r6
00011e  fbb0f2f6          UDIV     r2,r0,r6
000122  fb060311          MLS      r3,r6,r1,r0
000126  a10f              ADR      r1,|L3.356|
000128  a840              ADD      r0,sp,#0x100
00012a  f7fffffe          BL       __2sprintf
;;;242    	
;;;243    	memcpy(t_ATReadCMD.Altitude,buf,strlen(buf));
00012e  a840              ADD      r0,sp,#0x100
000130  f7fffffe          BL       strlen
000134  4602              MOV      r2,r0
000136  a940              ADD      r1,sp,#0x100
000138  69a8              LDR      r0,[r5,#0x18]  ; t_ATReadCMD
00013a  f7fffffe          BL       __aeabi_memcpy
;;;244    	
;;;245    }
00013e  b060              ADD      sp,sp,#0x180
000140  e8bd81f0          POP      {r4-r8,pc}
;;;246    
                          ENDP

                  |L3.324|
                          DCD      g_tGPS
                  |L3.328|
                          DCD      0x000186a0
                  |L3.332|
00014c  25303264          DCB      "%02d.%05d",0
000150  2e253035
000154  6400    
000156  00                DCB      0
000157  00                DCB      0
                  |L3.344|
                          DCD      0x404e0000
                  |L3.348|
00015c  256c6600          DCB      "%lf",0
                  |L3.352|
                          DCD      ||.bss||
                  |L3.356|
000164  2535642e          DCB      "%5d.%d",0
000168  256400  
00016b  00                DCB      0

                          AREA ||i.PrintfLogo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  PrintfLogo PROC
;;;296    */
;;;297    static void PrintfLogo(void)
000000  b510              PUSH     {r4,lr}
;;;298    {
;;;299    	printf("\n\r");
000002  a00e              ADR      r0,|L4.60|
000004  f7fffffe          BL       __2printf
;;;300    	printf("*************************************************************\r\n");
000008  a00d              ADR      r0,|L4.64|
00000a  f7fffffe          BL       __2printf
;;;301    	printf("* Routine name    : %s\r\n", EXAMPLE_NAME);	/* 打印例程名称 */
00000e  a11c              ADR      r1,|L4.128|
000010  a01e              ADR      r0,|L4.140|
000012  f7fffffe          BL       __2printf
;;;302    	printf("* Routine version : %s\r\n", DEMO_VER);		/* 打印例程版本 */
000016  a124              ADR      r1,|L4.168|
000018  a024              ADR      r0,|L4.172|
00001a  f7fffffe          BL       __2printf
;;;303    	printf("* publish date    : %s\r\n", EXAMPLE_DATE);	/* 打印例程日期 */
00001e  a12a              ADR      r1,|L4.200|
000020  a02c              ADR      r0,|L4.212|
000022  f7fffffe          BL       __2printf
;;;304    
;;;305    	/* 打印ST固件库版本，这3个定义宏在stm32f10x.h文件中 */
;;;306    	printf("* Hardware version: V%d.%d.%d (STM32F10x_StdPeriph_Driver)\r\n", __STM32F10X_STDPERIPH_VERSION_MAIN,
000026  2301              MOVS     r3,#1
000028  2206              MOVS     r2,#6
00002a  2103              MOVS     r1,#3
00002c  a030              ADR      r0,|L4.240|
00002e  f7fffffe          BL       __2printf
;;;307    			__STM32F10X_STDPERIPH_VERSION_SUB1,__STM32F10X_STDPERIPH_VERSION_SUB2);
;;;308    	printf("*************************************************************\r\n");
000032  e8bd4010          POP      {r4,lr}
000036  a002              ADR      r0,|L4.64|
000038  f7ffbffe          B.W      __2printf
;;;309    }
;;;310    
                          ENDP

                  |L4.60|
00003c  0a0d00            DCB      "\n\r",0
00003f  00                DCB      0
                  |L4.64|
000040  2a2a2a2a          DCB      "*******************************************************"
000044  2a2a2a2a
000048  2a2a2a2a
00004c  2a2a2a2a
000050  2a2a2a2a
000054  2a2a2a2a
000058  2a2a2a2a
00005c  2a2a2a2a
000060  2a2a2a2a
000064  2a2a2a2a
000068  2a2a2a2a
00006c  2a2a2a2a
000070  2a2a2a2a
000074  2a2a2a  
000077  2a2a2a2a          DCB      "******\r\n",0
00007b  2a2a0d0a
00007f  00      
                  |L4.128|
000080  47505320          DCB      "GPS test",0
000084  74657374
000088  00      
000089  00                DCB      0
00008a  00                DCB      0
00008b  00                DCB      0
                  |L4.140|
00008c  2a20526f          DCB      "* Routine name    : %s\r\n",0
000090  7574696e
000094  65206e61
000098  6d652020
00009c  20203a20
0000a0  25730d0a
0000a4  00      
0000a5  00                DCB      0
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L4.168|
0000a8  312e3000          DCB      "1.0",0
                  |L4.172|
0000ac  2a20526f          DCB      "* Routine version : %s\r\n",0
0000b0  7574696e
0000b4  65207665
0000b8  7273696f
0000bc  6e203a20
0000c0  25730d0a
0000c4  00      
0000c5  00                DCB      0
0000c6  00                DCB      0
0000c7  00                DCB      0
                  |L4.200|
0000c8  32303139          DCB      "2019-07-16",0
0000cc  2d30372d
0000d0  313600  
0000d3  00                DCB      0
                  |L4.212|
0000d4  2a207075          DCB      "* publish date    : %s\r\n",0
0000d8  626c6973
0000dc  68206461
0000e0  74652020
0000e4  20203a20
0000e8  25730d0a
0000ec  00      
0000ed  00                DCB      0
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L4.240|
0000f0  2a204861          DCB      "* Hardware version: V%d.%d.%d (STM32F10x_StdPeriph_Driv"
0000f4  72647761
0000f8  72652076
0000fc  65727369
000100  6f6e3a20
000104  5625642e
000108  25642e25
00010c  64202853
000110  544d3332
000114  46313078
000118  5f537464
00011c  50657269
000120  70685f44
000124  726976  
000127  6572290d          DCB      "er)\r\n",0
00012b  0a00    
00012d  00                DCB      0
00012e  00                DCB      0
00012f  00                DCB      0

                          AREA ||i.bsp_InitGprsToAM21E||, CODE, READONLY, ALIGN=2

                  bsp_InitGprsToAM21E PROC
;;;263    */
;;;264    void bsp_InitGprsToAM21E(void)
000000  4811              LDR      r0,|L5.72|
;;;265    {	
;;;266    	t_ATReadCMD.CSQ = am_CSQ;
000002  4910              LDR      r1,|L5.68|
;;;267    	t_ATReadCMD.CIMI = am_CIMI;
000004  6001              STR      r1,[r0,#0]  ; t_ATReadCMD
000006  f1000138          ADD      r1,r0,#0x38
;;;268    	t_ATReadCMD.CEREG = 0;
00000a  6081              STR      r1,[r0,#8]  ; t_ATReadCMD
00000c  2100              MOVS     r1,#0
00000e  7101              STRB     r1,[r0,#4]
;;;269    	
;;;270    	t_ATReadCMD.LAT = am_LAT;
000010  f1000144          ADD      r1,r0,#0x44
;;;271    	t_ATReadCMD.LON = am_LON;
000014  60c1              STR      r1,[r0,#0xc]  ; t_ATReadCMD
000016  3140              ADDS     r1,r1,#0x40
;;;272    	
;;;273    	t_ATReadCMD.Speed = am_SPEED;
000018  6101              STR      r1,[r0,#0x10]  ; t_ATReadCMD
00001a  3140              ADDS     r1,r1,#0x40
;;;274    	t_ATReadCMD.Altitude = am_ALTITUDE;
00001c  6141              STR      r1,[r0,#0x14]  ; t_ATReadCMD
00001e  310c              ADDS     r1,r1,#0xc
;;;275    	
;;;276    	t_ATReadCMD._vPm25 = 20;
000020  6181              STR      r1,[r0,#0x18]  ; t_ATReadCMD
000022  2114              MOVS     r1,#0x14
000024  7741              STRB     r1,[r0,#0x1d]
;;;277    	t_ATReadCMD._vTemp = 88;
000026  2158              MOVS     r1,#0x58
000028  7701              STRB     r1,[r0,#0x1c]
;;;278    	
;;;279    	
;;;280    	t_ATReadCMD.strLAT = "lat";
00002a  a108              ADR      r1,|L5.76|
;;;281    	t_ATReadCMD.strLON = "lon";
00002c  6201              STR      r1,[r0,#0x20]  ; t_ATReadCMD
00002e  a108              ADR      r1,|L5.80|
;;;282    	
;;;283    	t_ATReadCMD.str_vTemp = "temperature";
000030  6241              STR      r1,[r0,#0x24]  ; t_ATReadCMD
000032  a108              ADR      r1,|L5.84|
;;;284    	t_ATReadCMD.str_vPm25 = "pm2.5";
000034  6281              STR      r1,[r0,#0x28]  ; t_ATReadCMD
000036  a10a              ADR      r1,|L5.96|
;;;285    	
;;;286    	t_ATReadCMD.strSpeed    = "SPEED";
000038  62c1              STR      r1,[r0,#0x2c]  ; t_ATReadCMD
00003a  a10b              ADR      r1,|L5.104|
;;;287    	t_ATReadCMD.strAltitude = "Altitude";
00003c  6301              STR      r1,[r0,#0x30]  ; t_ATReadCMD
00003e  a10c              ADR      r1,|L5.112|
000040  6341              STR      r1,[r0,#0x34]  ; t_ATReadCMD
;;;288    }
000042  4770              BX       lr
;;;289    /*
                          ENDP

                  |L5.68|
                          DCD      ||.data||
                  |L5.72|
                          DCD      ||.bss||
                  |L5.76|
00004c  6c617400          DCB      "lat",0
                  |L5.80|
000050  6c6f6e00          DCB      "lon",0
                  |L5.84|
000054  74656d70          DCB      "temperature",0
000058  65726174
00005c  75726500
                  |L5.96|
000060  706d322e          DCB      "pm2.5",0
000064  3500    
000066  00                DCB      0
000067  00                DCB      0
                  |L5.104|
000068  53504545          DCB      "SPEED",0
00006c  4400    
00006e  00                DCB      0
00006f  00                DCB      0
                  |L5.112|
000070  416c7469          DCB      "Altitude",0
000074  74756465
000078  00      
000079  00                DCB      0
00007a  00                DCB      0
00007b  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  main PROC
;;;42     */
;;;43     int main(void)
000000  f5ad6d82          SUB      sp,sp,#0x410
;;;44     {
;;;45     	char DataBuf[512];
;;;46     	char LocationBuf[512];
;;;47     	uint8_t ucData;
;;;48     	
;;;49     	/* 硬件初始化 */
;;;50     	bsp_Init();		
000004  f7fffffe          BL       bsp_Init
;;;51     	/* 打印例程信息到串口1 */
;;;52     	PrintfLogo();	
000008  f7fffffe          BL       PrintfLogo
;;;53     	/* 初始化AM21E相关变量 */
;;;54     	bsp_InitGprsToAM21E();
00000c  f7fffffe          BL       bsp_InitGprsToAM21E
;;;55     	AM21E_init();
000010  f7fffffe          BL       AM21E_init
;;;56     	
;;;57     	bsp_StartTimer(0, 10000); /* 启动软件定时器0，设置为自动模式,周期1000ms */
000014  f2427510          MOV      r5,#0x2710
;;;58     	
;;;59     	/* 进入主程序循环体 */
;;;60     	while (1)
000018  e044              B        |L6.164|
;;;61     	{
;;;62     		bsp_Idle();																			/* 这个函数在bsp.c文件。用户可以修改这个函数实现CPU休眠和喂狗 */
00001a  bf00              NOP      
                  |L6.28|
00001c  f7fffffe          BL       bsp_Idle
;;;63     
;;;64     		if(comGetChar(COM1, &ucData))										/* 将串口转发到GPRS串口 */
000020  f50d6181          ADD      r1,sp,#0x408
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       comGetChar
00002a  b128              CBZ      r0,|L6.56|
;;;65     		{
;;;66     			comSendBuf(COM_GPRS, &ucData, 1);	
00002c  2201              MOVS     r2,#1
00002e  f50d6181          ADD      r1,sp,#0x408
000032  4610              MOV      r0,r2
000034  f7fffffe          BL       comSendBuf
                  |L6.56|
;;;67     		}
;;;68     		if(comGetChar(COM_GPRS, &ucData))
000038  f50d6181          ADD      r1,sp,#0x408
00003c  2001              MOVS     r0,#1
00003e  f7fffffe          BL       comGetChar
000042  b118              CBZ      r0,|L6.76|
;;;69     		{
;;;70     			GPRS_PrintRxData(ucData);		/* 将接收到数据打印到调试串口1 */
000044  f89d0408          LDRB     r0,[sp,#0x408]
000048  f7fffffe          BL       GPRS_PrintRxData
                  |L6.76|
;;;71     		}
;;;72     		
;;;73     			if (bsp_CheckTimer(0))
00004c  2000              MOVS     r0,#0
00004e  f7fffffe          BL       bsp_CheckTimer
000052  2800              CMP      r0,#0
000054  d0e2              BEQ      |L6.28|
;;;74     			{			
;;;75     				#if ENABLEGPS
;;;76     				
;;;77     				AT_GetToGPSData("AT+AMGNSSRD?");
000056  a016              ADR      r0,|L6.176|
000058  f7fffffe          BL       AT_GetToGPSData
;;;78     				DispGPSStatus();														/* 打印GPS解析结果 */		
00005c  f7fffffe          BL       DispGPSStatus
;;;79     				sprintf(LocationBuf,",;%s,%s;%s,%s", t_ATReadCMD.strLAT,t_ATReadCMD.LAT	
000060  4c17              LDR      r4,|L6.192|
000062  6921              LDR      r1,[r4,#0x10]  ; t_ATReadCMD
000064  6a60              LDR      r0,[r4,#0x24]  ; t_ATReadCMD
000066  e9cd0100          STRD     r0,r1,[sp,#0]
00006a  a116              ADR      r1,|L6.196|
00006c  a802              ADD      r0,sp,#8
00006e  68e3              LDR      r3,[r4,#0xc]  ; t_ATReadCMD
000070  6a22              LDR      r2,[r4,#0x20]  ; t_ATReadCMD
000072  f7fffffe          BL       __2sprintf
;;;80     																					 , t_ATReadCMD.strLON,t_ATReadCMD.LON
;;;81     							 );			
;;;82     				#endif
;;;83     				
;;;84     				#if ENABLEHTTP
;;;85     				
;;;86     					/* POST 数据流 */
;;;87     					sprintf(DataBuf,",;%s,%d;%s,%d;%s",t_ATReadCMD.str_vTemp,t_ATReadCMD._vTemp,				//温度
;;;88     																					   t_ATReadCMD.str_vPm25,t_ATReadCMD._vPm25,				//PM2.5
;;;89     																							LocationBuf																			//GPS信息
;;;90     								 );
;;;91     					SendToHTTP(ONENETDEVID,ONENETDEVAPI,DataBuf);
;;;92     	
;;;93     					/* GET 数据流 */
;;;94     				#endif
;;;95     				
;;;96     				#if ENABLETCP
;;;97     				
;;;98     					/* POST 数据流 */
;;;99     					sprintf(LocationBuf,"{\"datastreams\":[{\"id\":\"location\",\"datapoints\":[{\"value\":{\"lon\":%s,\"lat\":%s}}]}]}\r\n",t_ATReadCMD.LON,t_ATReadCMD.LAT);	
000076  e9d43203          LDRD     r3,r2,[r4,#0xc]
00007a  4916              LDR      r1,|L6.212|
00007c  a802              ADD      r0,sp,#8
00007e  f7fffffe          BL       __2sprintf
;;;100    					sprintf(DataBuf,"POST /devices/%s/datapoints HTTP/1.1\r\napi-key: %s\r\nHost: api.heclouds.com\r\nContent-Length: %d\r\n\r\n%s"	,ONENETDEVID,ONENETDEVAPI,strlen(LocationBuf),LocationBuf);						
000082  a802              ADD      r0,sp,#8
000084  f7fffffe          BL       strlen
000088  a902              ADD      r1,sp,#8
00008a  e9cd0100          STRD     r0,r1,[sp,#0]
00008e  a312              ADR      r3,|L6.216|
000090  a219              ADR      r2,|L6.248|
000092  491c              LDR      r1,|L6.260|
000094  a882              ADD      r0,sp,#0x208
000096  f7fffffe          BL       __2sprintf
;;;101    					SendToTCP(SERVERIP,SERVERPROT,DataBuf);
00009a  aa82              ADD      r2,sp,#0x208
00009c  2150              MOVS     r1,#0x50
00009e  a01a              ADR      r0,|L6.264|
0000a0  f7fffffe          BL       SendToTCP
                  |L6.164|
0000a4  4629              MOV      r1,r5                 ;57
0000a6  2000              MOVS     r0,#0                 ;57
0000a8  f7fffffe          BL       bsp_StartTimer
0000ac  e7b6              B        |L6.28|
;;;102    					
;;;103    					/* GET 数据流 */
;;;104    				#endif
;;;105    
;;;106    			 /* 启动软件定时器0，设置为自动模式,周期1000ms */
;;;107    				bsp_StartTimer(0, 10000);								
;;;108    			}
;;;109    		}
;;;110    }
;;;111    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L6.176|
0000b0  41542b41          DCB      "AT+AMGNSSRD?",0
0000b4  4d474e53
0000b8  5352443f
0000bc  00      
0000bd  00                DCB      0
0000be  00                DCB      0
0000bf  00                DCB      0
                  |L6.192|
                          DCD      ||.bss||
                  |L6.196|
0000c4  2c3b2573          DCB      ",;%s,%s;%s,%s",0
0000c8  2c25733b
0000cc  25732c25
0000d0  7300    
0000d2  00                DCB      0
0000d3  00                DCB      0
                  |L6.212|
                          DCD      ||.conststring||
                  |L6.216|
0000d8  6b4b4155          DCB      "kKAUkW0z8AHiPa9P7EYIQPKyPuM=",0
0000dc  6b57307a
0000e0  38414869
0000e4  50613950
0000e8  37455949
0000ec  51504b79
0000f0  50754d3d
0000f4  00      
0000f5  00                DCB      0
0000f6  00                DCB      0
0000f7  00                DCB      0
                  |L6.248|
0000f8  35333537          DCB      "535759705",0
0000fc  35393730
000100  3500    
000102  00                DCB      0
000103  00                DCB      0
                  |L6.260|
                          DCD      ||.conststring||+0x54
                  |L6.264|
000108  3138332e          DCB      "183.230.40.33",0
00010c  3233302e
000110  34302e33
000114  3300    
000116  00                DCB      0
000117  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  t_ATReadCMD
                          %        56
                  am_CIMI
                          %        12
                  am_LAT
                          %        64
                  am_LON
                          %        64
                  am_SPEED
                          %        12
                  am_ALTITUDE
                          %        12

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  7b226461          DCB      "{""datastreams"":[{""id"":""location"",""datapoints"":["
000004  74617374
000008  7265616d
00000c  73223a5b
000010  7b226964
000014  223a226c
000018  6f636174
00001c  696f6e22
000020  2c226461
000024  7461706f
000028  696e7473
00002c  223a5b  
00002f  7b227661          DCB      "{""value"":{""lon"":%s,""lat"":%s}}]}]}\r\n",0
000033  6c756522
000037  3a7b226c
00003b  6f6e223a
00003f  25732c22
000043  6c617422
000047  3a25737d
00004b  7d5d7d5d
00004f  7d0d0a00
000053  00                DCB      0
000054  504f5354          DCB      "POST /devices/%s/datapoints HTTP/1.1\r\napi-key: %s\r\n"
000058  202f6465
00005c  76696365
000060  732f2573
000064  2f646174
000068  61706f69
00006c  6e747320
000070  48545450
000074  2f312e31
000078  0d0a6170
00007c  692d6b65
000080  793a2025
000084  730d0a  
000087  486f7374          DCB      "Host: api.heclouds.com\r\nContent-Length: %d\r\n\r\n%s",0
00008b  3a206170
00008f  692e6865
000093  636c6f75
000097  64732e63
00009b  6f6d0d0a
00009f  436f6e74
0000a3  656e742d
0000a7  4c656e67
0000ab  74683a20
0000af  25640d0a
0000b3  0d0a2573
0000b7  00      

                          AREA ||.data||, DATA, ALIGN=0

                  am_CSQ
                          %        8

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\app\\src\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 128
|__asm___6_main_c_main____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
