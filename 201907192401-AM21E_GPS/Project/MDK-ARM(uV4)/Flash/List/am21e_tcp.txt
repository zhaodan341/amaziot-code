; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\am21e_tcp.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\am21e_tcp.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\STM32_USB-FS-Device_Driver\inc -I..\..\Libraries\CMSIS\Include -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User\app\inc -I..\..\User\fonts -I..\..\User\images -I..\..\User\uIP\uip -I..\..\User\uIP\http -I..\..\User\uIP\dm9000 -I..\..\User\FatFS\src -I..\..\User\usb_mass -I..\..\User\CH376\inc -I.\RTE\_Flash -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=526 -D_RTE_ -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\flash\obj\am21e_tcp.crf ..\..\User\bsp\src\AM21E_TCP.C]
                          THUMB

                          AREA ||i.SendToTCP||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  SendToTCP PROC
;;;16     
;;;17     int8_t SendToTCP(char *_pIPstr,uint32_t _vPortstr,char *_pData)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;18     {
000004  4681              MOV      r9,r0
000006  b091              SUB      sp,sp,#0x44
000008  4688              MOV      r8,r1
00000a  4617              MOV      r7,r2
;;;19     	char Buf[64];
;;;20     	int8_t ret = 0;
00000c  2400              MOVS     r4,#0
;;;21     	char  *_pSendfBuf;		//发送缓存
;;;22     	int32_t vSendLen;			//发送长度
;;;23     	
;;;24     	vSendLen = strlen(_pData);
00000e  4610              MOV      r0,r2
000010  f7fffffe          BL       strlen
000014  4605              MOV      r5,r0
;;;25     	
;;;26     	if(vSendLen >= 2048)	//长度超限，退出
000016  f5b06f00          CMP      r0,#0x800
00001a  db03              BLT      |L1.36|
;;;27     	{
;;;28     			return -2;
00001c  1ea0              SUBS     r0,r4,#2
                  |L1.30|
;;;29     	}
;;;30     	
;;;31     		_pSendfBuf = (char *) malloc(vSendLen);																	//分配一段内存
;;;32     	
;;;33     		sprintf(_pSendfBuf,"%s\r",_pData);
;;;34     		_pSendfBuf[vSendLen] = 0x1A;																						//最后一位添加结束符
;;;35     	
;;;36     	  sprintf(Buf,"AT+CIPSTART=\"TCP\",\"%s\",%d\r",_pIPstr,_vPortstr);				//将IP 和 端口先格式化																					
;;;37     		
;;;38     		/* 查询一下TCP连接状态	*/								
;;;39     			if (AT_SendToCmdData("AT+CIPSTATUS","STATE:IP INITIAL",100))						//第一次开机首先要初始化TCP的相关IP地址和端口
;;;40     			{		
;;;41     					if(AT_SendToCmdData(Buf,"CONNECT OK",5000))												//等待连接成功
;;;42     					{				
;;;43     						 ret = 1;			
;;;44     					}else{			
;;;45     						free(_pSendfBuf);//释放内存
;;;46     						return ret = 0;					
;;;47     					}
;;;48     					AT_SendToCmdData("AT+CIPSEND",">",1);														 //发送特殊性, 由于" > " 字符后没有换行，所以时间简短一点   
;;;49     					if(AT_SendToCmdData(_pSendfBuf,"SEND OK",1000))											//发送数据到服务器
;;;50     					{
;;;51     						ret = 1;
;;;52     					}else{
;;;53     						free(_pSendfBuf);//释放内存
;;;54     						return ret = -1;
;;;55     					}		
;;;56     
;;;57     			}else if(AT_SendToCmdData("AT+CIPSTATUS","STATE:CONNECT OK",100))
;;;58     			{
;;;59     			
;;;60     					AT_SendToCmdData("AT+CIPSEND",">",1);														    
;;;61     					if(AT_SendToCmdData(_pSendfBuf,"SEND OK",1000))													//发送数据到服务器
;;;62     					{
;;;63     						ret = 1;
;;;64     					}else{
;;;65     						free(_pSendfBuf);//释放内存
;;;66     						return ret = -1;
;;;67     					}			
;;;68     			}
;;;69     			else if(AT_SendToCmdData("AT+CIPSTATUS","STATE:CLOSED",100))
;;;70     			{
;;;71     					if(AT_SendToCmdData(Buf,"CONNECT OK",5000))												//等待连接成功
;;;72     					{				
;;;73     						 ret = 1;			
;;;74     					}else{			
;;;75     						AT_SendToCmdData("AT+CIPCLOSE","CLOSE OK",1000);
;;;76     						free(_pSendfBuf);//释放内存
;;;77     						return ret = 0;					
;;;78     					}
;;;79     					AT_SendToCmdData("AT+CIPSEND",">",1);														 //发送特殊性, 由于" > " 字符后没有换行，所以时间简短一点   
;;;80     					if(AT_SendToCmdData(_pSendfBuf,"SEND OK",1000))											//发送数据到服务器
;;;81     					{
;;;82     						ret = 1;
;;;83     					}else{
;;;84     						free(_pSendfBuf);//释放内存
;;;85     						return ret = -1;
;;;86     					}	
;;;87     			}
;;;88     			free(_pSendfBuf);//释放内存
;;;89     			return ret;
;;;90     }
00001e  b011              ADD      sp,sp,#0x44
000020  e8bd83f0          POP      {r4-r9,pc}
                  |L1.36|
000024  f7fffffe          BL       malloc
000028  4606              MOV      r6,r0                 ;31
00002a  463a              MOV      r2,r7                 ;33
00002c  a12f              ADR      r1,|L1.236|
00002e  f7fffffe          BL       __2sprintf
000032  201a              MOVS     r0,#0x1a              ;34
000034  5570              STRB     r0,[r6,r5]            ;34
000036  4643              MOV      r3,r8                 ;36
000038  464a              MOV      r2,r9                 ;36
00003a  a12d              ADR      r1,|L1.240|
00003c  4668              MOV      r0,sp                 ;36
00003e  f7fffffe          BL       __2sprintf
000042  2264              MOVS     r2,#0x64              ;39
000044  a131              ADR      r1,|L1.268|
000046  a036              ADR      r0,|L1.288|
000048  f7fffffe          BL       AT_SendToCmdData
00004c  f2413788          MOV      r7,#0x1388            ;41
000050  f44f787a          MOV      r8,#0x3e8             ;49
000054  f04f35ff          MOV      r5,#0xffffffff        ;54
000058  b1c0              CBZ      r0,|L1.140|
00005a  463a              MOV      r2,r7                 ;41
00005c  a134              ADR      r1,|L1.304|
00005e  4668              MOV      r0,sp                 ;41
000060  f7fffffe          BL       AT_SendToCmdData
000064  b168              CBZ      r0,|L1.130|
                  |L1.102|
000066  2401              MOVS     r4,#1                 ;43
000068  4622              MOV      r2,r4                 ;48
00006a  a134              ADR      r1,|L1.316|
00006c  a034              ADR      r0,|L1.320|
00006e  f7fffffe          BL       AT_SendToCmdData
000072  4642              MOV      r2,r8                 ;49
000074  a135              ADR      r1,|L1.332|
000076  4630              MOV      r0,r6                 ;49
000078  f7fffffe          BL       AT_SendToCmdData
00007c  2800              CMP      r0,#0                 ;49
00007e  d130              BNE      |L1.226|
000080  e02a              B        |L1.216|
                  |L1.130|
000082  4630              MOV      r0,r6                 ;45
000084  f7fffffe          BL       free
000088  2000              MOVS     r0,#0                 ;46
00008a  e7c8              B        |L1.30|
                  |L1.140|
00008c  2264              MOVS     r2,#0x64              ;57
00008e  a131              ADR      r1,|L1.340|
000090  a023              ADR      r0,|L1.288|
000092  f7fffffe          BL       AT_SendToCmdData
000096  b160              CBZ      r0,|L1.178|
000098  2201              MOVS     r2,#1                 ;60
00009a  a128              ADR      r1,|L1.316|
00009c  a028              ADR      r0,|L1.320|
00009e  f7fffffe          BL       AT_SendToCmdData
0000a2  4642              MOV      r2,r8                 ;61
0000a4  a129              ADR      r1,|L1.332|
0000a6  4630              MOV      r0,r6                 ;61
0000a8  f7fffffe          BL       AT_SendToCmdData
0000ac  b1a0              CBZ      r0,|L1.216|
0000ae  2401              MOVS     r4,#1                 ;63
0000b0  e017              B        |L1.226|
                  |L1.178|
0000b2  2264              MOVS     r2,#0x64              ;69
0000b4  a12c              ADR      r1,|L1.360|
0000b6  a01a              ADR      r0,|L1.288|
0000b8  f7fffffe          BL       AT_SendToCmdData
0000bc  b188              CBZ      r0,|L1.226|
0000be  463a              MOV      r2,r7                 ;71
0000c0  a11b              ADR      r1,|L1.304|
0000c2  4668              MOV      r0,sp                 ;71
0000c4  f7fffffe          BL       AT_SendToCmdData
0000c8  2800              CMP      r0,#0                 ;71
0000ca  d1cc              BNE      |L1.102|
0000cc  4642              MOV      r2,r8                 ;75
0000ce  a12a              ADR      r1,|L1.376|
0000d0  a02c              ADR      r0,|L1.388|
0000d2  f7fffffe          BL       AT_SendToCmdData
0000d6  e7d4              B        |L1.130|
                  |L1.216|
0000d8  4630              MOV      r0,r6                 ;84
0000da  f7fffffe          BL       free
0000de  4628              MOV      r0,r5                 ;85
0000e0  e79d              B        |L1.30|
                  |L1.226|
0000e2  4630              MOV      r0,r6                 ;88
0000e4  f7fffffe          BL       free
0000e8  4620              MOV      r0,r4                 ;89
0000ea  e798              B        |L1.30|
;;;91     
                          ENDP

                  |L1.236|
0000ec  25730d00          DCB      "%s\r",0
                  |L1.240|
0000f0  41542b43          DCB      "AT+CIPSTART=""TCP"",""%s"",%d\r",0
0000f4  49505354
0000f8  4152543d
0000fc  22544350
000100  222c2225
000104  73222c25
000108  640d00  
00010b  00                DCB      0
                  |L1.268|
00010c  53544154          DCB      "STATE:IP INITIAL",0
000110  453a4950
000114  20494e49
000118  5449414c
00011c  00      
00011d  00                DCB      0
00011e  00                DCB      0
00011f  00                DCB      0
                  |L1.288|
000120  41542b43          DCB      "AT+CIPSTATUS",0
000124  49505354
000128  41545553
00012c  00      
00012d  00                DCB      0
00012e  00                DCB      0
00012f  00                DCB      0
                  |L1.304|
000130  434f4e4e          DCB      "CONNECT OK",0
000134  45435420
000138  4f4b00  
00013b  00                DCB      0
                  |L1.316|
00013c  3e00              DCB      ">",0
00013e  00                DCB      0
00013f  00                DCB      0
                  |L1.320|
000140  41542b43          DCB      "AT+CIPSEND",0
000144  49505345
000148  4e4400  
00014b  00                DCB      0
                  |L1.332|
00014c  53454e44          DCB      "SEND OK",0
000150  204f4b00
                  |L1.340|
000154  53544154          DCB      "STATE:CONNECT OK",0
000158  453a434f
00015c  4e4e4543
000160  54204f4b
000164  00      
000165  00                DCB      0
000166  00                DCB      0
000167  00                DCB      0
                  |L1.360|
000168  53544154          DCB      "STATE:CLOSED",0
00016c  453a434c
000170  4f534544
000174  00      
000175  00                DCB      0
000176  00                DCB      0
000177  00                DCB      0
                  |L1.376|
000178  434c4f53          DCB      "CLOSE OK",0
00017c  45204f4b
000180  00      
000181  00                DCB      0
000182  00                DCB      0
000183  00                DCB      0
                  |L1.388|
000184  41542b43          DCB      "AT+CIPCLOSE",0
000188  4950434c
00018c  4f534500

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\AM21E_TCP.C"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_AM21E_TCP_C_086df836____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_AM21E_TCP_C_086df836____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_AM21E_TCP_C_086df836____REVSH|
#line 128
|__asm___11_AM21E_TCP_C_086df836____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
